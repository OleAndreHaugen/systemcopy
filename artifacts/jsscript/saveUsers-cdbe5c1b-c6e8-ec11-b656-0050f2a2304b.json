{
	"id": "cdbe5c1b-c6e8-ec11-b656-0050f2a2304b",
	"createdAt": "2022-06-10T14:03:31.183Z",
	"createdBy": "jens-uwe.gross@neptune-software.com",
	"globalScripts": [],
	"externalModules": [],
	"entitySets": [],
	"apis": [],
	"name": "saveUsers",
	"ver": "22.6.10.2139",
	"description": "save system users via SQL",
	"content": [
		"==OBJECT STRING==",
		"const userData = req.body.data; // request data body.\r",
		"\r",
		"log.info(userData);\r",
		"\r",
		"const schema = await getSchema();\r",
		"\r",
		"if (schema === null) {\r",
		"    result.data = \"No schema found\";\r",
		"    complete();\r",
		"    return;\r",
		"}\r",
		"\r",
		"for (i=0; i< userData.length; i++) {\r",
		"    log.info(userData[i].data);\r",
		"    await insertUser(schema, userData[i].data);\r",
		"}\r",
		"\r",
		"/*for (i=0; i< userData.length; i++) {\r",
		"    await insertRole(schema, userData[i].roles);\r",
		"}*/\r",
		"\r",
		"\r",
		"complete();\r",
		"\r",
		"//const query = await entityManager.query(\"SELECT * FROM  INFORMATION_SCHEMA.TABLES;\");\r",
		"//const query = await entityManager.query(\"SELECT application, appType from dbo.app where appType IN ('') and deleted = 'false';\");\r",
		"//const query = await entityManager.query(\"select * from dbo.users where username like 'lloy%';\");\r",
		"//console.log(p9.system.config.get('name'));\r",
		"\r",
		"\r",
		"\r",
		"\r",
		"//console.log(query);\r",
		"\r",
		"complete();\r",
		"\r",
		"async function insertUser(schema, user) {\r",
		"\r",
		"\r",
		"    // Loop records in an array\r",
		"    // Replace yourArray with your Array. Data contains the \\\"workarea\\\" of the array. i contains index number\r",
		"    let valueNames = 'INSERT INTO ' + schema + '.users (';\r",
		"    Object.keys(user).forEach(function(value, index, array) {\r",
		"        // Do stuff\r",
		"        if (index > 0) {\r",
		"            valueNames = valueNames + ',';\r",
		"        }\r",
		"        valueNames = valueNames + '\"' + value + '\"';\r",
		"    });\r",
		"    valueNames = valueNames + ') VALUES (' ;\r",
		"    Object.values(user).forEach(function(value, index, array) {\r",
		"        // Do stuff\r",
		"        if (index > 0) {\r",
		"            valueNames = valueNames + ',';\r",
		"        }\r",
		"        let fieldValue = \"\";\r",
		"        if (value === null) {\r",
		"            fieldValue = \"null\";\r",
		"        } else if (typeof value === 'boolean') {\r",
		"            fieldValue = value.toString();\r",
		"            } else {\r",
		"            fieldValue = \"'\" + value + \"'\";\r",
		"        }\r",
		"        valueNames = valueNames + fieldValue;\r",
		"        \r",
		"    });\r",
		"\r",
		"    valueNames = valueNames + ');';\r",
		"    log.info(valueNames);\r",
		"\r",
		"    /*const query = await entityManager.query(valueNames);\r",
		"\r",
		"    //console.log(query);\r",
		"    const devRole = '8a573a26-320a-4bac-a01e-2236a65046f6';\r",
		"    let insertRole = 'INSERT INTO planet9.role_users__users_roles (\"role_users\", \"users_roles\") VALUES (';\r",
		"    insertRole = insertRole + \"'\" + devRole + \"','\" + user.id + \"');\";\r",
		"    console.log(insertRole);\r",
		"\r",
		"    const queryRole = await entityManager.query(insertRole);*/\r",
		"    \r",
		"  \r",
		"}\r",
		"\r",
		"async function insertRole(schema, roles) {\r",
		"    for (i=0; i< roles.length; i++) {\r",
		"        let insertRole = 'INSERT INTO ' + schema + '.role_users__users_roles (\"role_users\", \"users_roles\") VALUES (';\r",
		"        insertRole = insertRole + \"'\" + roles[i].role_users + \"','\" + roles[i].users_roles + \"');\";\r",
		"        console.log(insertRole);\r",
		"    }\r",
		"    \r",
		"}\r",
		"\r",
		"async function getSchema() {\r",
		"    let query = await entityManager.query(\"select * from information_schema.schemata where schema_name = 'planet9'\");\r",
		"    if (query.length > 0) {\r",
		"        return 'planet9';\r",
		"    }\r",
		"    query = await entityManager.query(\"select * from information_schema.schemata where schema_name = 'dbo'\");\r",
		"       if (query.length > 0) {\r",
		"        return 'dbo';\r",
		"    }\r",
		"    return null;\r",
		"}\r",
		"\r",
		"/*\r",
		"    const user = {\r",
		"    id: 'EFF72789-69E9-EB11-A7AD-501AC5522AD5',\r",
		"    createdAt: '2021-07-20T14:48:27.716Z',\r",
		"    updatedAt: '2022-05-27T10:07:15.490Z',\r",
		"    createdBy: 'system',\r",
		"    changedBy: 'system',\r",
		"    resources: 'null',\r",
		"    passwordHistory: 'null',\r",
		"    certificates: '[]',\r",
		"    username: 'jens-uwe',\r",
		"    password: '$2a$10$PphQnH5lI8JHko/WLhHpZOwxR8h6uWW21lGUD.H8ypcIP3ZhqqpQe',\r",
		"    email: 'jens-uwe.gross@neptune-software.com',\r",
		"    name: 'jens-uwe.gross@neptune-software.com',\r",
		"    phone: null,\r",
		"    mobile: null,\r",
		"    locked: false,\r",
		"    image: null,\r",
		"    admin: false,\r",
		"    language: 'EN',\r",
		"    idpSource: 'external',\r",
		"    isExternal: false,\r",
		"    idpSourceId: null,\r",
		"    idpSourceKey: null,\r",
		"    jwtEnabled: true,\r",
		"    jwtTokenUuid: '13ec6dc5-3155-48ac-99ca-31d211b4720e',\r",
		"    jwtSignedToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IkVGRjcyNzg5LTY5RTktRUIxMS1BN0FELTUwMUFDNTUyMkFENSIsInV1aWQiOiIxM2VjNmRjNS0zMTU1LTQ4YWMtOTljYS0zMWQyMTFiNDcyMGUiLCJpYXQiOjE2NDg3MjUyNzAsImV4cCI6MTY1NjUwMTI3MH0.n2wqogdeVAEfA05NW0leWjy5rBAh8WDVxt6375Ry4yU',\r",
		"    jwtTokenExpires: '2022-06-29T11:14:30.000Z',\r",
		"    failedLoginAttempts: 0,\r",
		"    passwordUpdated: null,\r",
		"    lastLogin: '2022-05-27T10:07:15.000Z',\r",
		"    resetPasswordToken: null,\r",
		"    passwordUpdatedAt: null,\r",
		"    begins: null,\r",
		"    ends: null\r",
		"  };*/"
	],
	"useAsGlobalScript": false,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": false,
	"jsscriptGroup": "eeb7d97b-63c6-ec11-997e-dc9840109182",
	"package": "e8ab41b8-63c6-ec11-997e-dc9840109182"
}